{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getCategories } from './thunk';\nconst initialState = {\n  data: [],\n  selected: [],\n  loading: false,\n  error: null\n};\nexport const categoriesSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    selectCategories: (state, action) => {\n      if (state.selected.includes(action.payload)) {\n        state.selected = state.selected.filter(id => id !== action.payload);\n      } else {\n        state.selected.push(action.payload);\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getCategories.pending, (state, {\n      payload\n    }) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(getCategories.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = payload;\n      state.loading = false;\n      state.error = null;\n    });\n    builder.addCase(getCategories.rejected, (state, action) => {\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        state.error = action.error;\n      }\n\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  selectCategories\n} = categoriesSlice.actions;","map":{"version":3,"sources":["C:/Users/Digicrym/Documents/inspocreate/src/reducers/categories/slice.js"],"names":["createSlice","getCategories","initialState","data","selected","loading","error","categoriesSlice","name","reducers","selectCategories","state","action","includes","payload","filter","id","push","extraReducers","builder","addCase","pending","fulfilled","rejected","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,OAAO,EAAE,KAHW;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAGP,WAAW,CAAC;AAC1CQ,EAAAA,IAAI,EAAE,YADoC;AAE1CN,EAAAA,YAF0C;AAG1CO,EAAAA,QAAQ,EAAE;AACTC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAID,KAAK,CAACP,QAAN,CAAeS,QAAf,CAAwBD,MAAM,CAACE,OAA/B,CAAJ,EAA6C;AAC5CH,QAAAA,KAAK,CAACP,QAAN,GAAiBO,KAAK,CAACP,QAAN,CAAeW,MAAf,CAAuBC,EAAD,IAAQA,EAAE,KAAKJ,MAAM,CAACE,OAA5C,CAAjB;AACA,OAFD,MAEO;AACNH,QAAAA,KAAK,CAACP,QAAN,CAAea,IAAf,CAAoBL,MAAM,CAACE,OAA3B;AACA;AACD;AAPQ,GAHgC;AAY1CI,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC3BA,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,aAAa,CAACoB,OAA9B,EAAuC,CAACV,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AAC9DH,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACA,KAHD;AAIAa,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,aAAa,CAACqB,SAA9B,EAAyC,CAACX,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AAChEH,MAAAA,KAAK,CAACR,IAAN,GAAaW,OAAb;AACAH,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACA,KAJD;AAKAa,IAAAA,OAAO,CAACC,OAAR,CAAgBnB,aAAa,CAACsB,QAA9B,EAAwC,CAACZ,KAAD,EAAQC,MAAR,KAAmB;AAC1D,UAAIA,MAAM,CAACE,OAAX,EAAoB;AACnBH,QAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACE,OAArB;AACA,OAFD,MAEO;AACNH,QAAAA,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACN,KAArB;AACA;;AACDK,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACA,KAPD;AAQA;AA9ByC,CAAD,CAAnC;AAiCP,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAuBH,eAAe,CAACiB,OAA7C","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { getCategories } from './thunk';\n\nconst initialState = {\n\tdata: [],\n\tselected: [],\n\tloading: false,\n\terror: null,\n};\n\nexport const categoriesSlice = createSlice({\n\tname: 'categories',\n\tinitialState,\n\treducers: {\n\t\tselectCategories: (state, action) => {\n\t\t\tif (state.selected.includes(action.payload)) {\n\t\t\t\tstate.selected = state.selected.filter((id) => id !== action.payload);\n\t\t\t} else {\n\t\t\t\tstate.selected.push(action.payload);\n\t\t\t}\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(getCategories.pending, (state, { payload }) => {\n\t\t\tstate.loading = true;\n\t\t\tstate.error = null;\n\t\t});\n\t\tbuilder.addCase(getCategories.fulfilled, (state, { payload }) => {\n\t\t\tstate.data = payload;\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\t\tbuilder.addCase(getCategories.rejected, (state, action) => {\n\t\t\tif (action.payload) {\n\t\t\t\tstate.error = action.payload;\n\t\t\t} else {\n\t\t\t\tstate.error = action.error;\n\t\t\t}\n\t\t\tstate.loading = false;\n\t\t});\n\t},\n});\n\nexport const { selectCategories } = categoriesSlice.actions;\n"]},"metadata":{},"sourceType":"module"}