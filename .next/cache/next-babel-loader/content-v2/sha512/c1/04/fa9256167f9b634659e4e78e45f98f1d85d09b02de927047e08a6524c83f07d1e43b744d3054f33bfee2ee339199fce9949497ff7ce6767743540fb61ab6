{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../axios';\nexport const getPostList = createAsyncThunk(`posts/getPostList/`, // Declare the type your function argument here:\nasync (data, thunkApi) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post('/posts/activities', '', {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (e) {\n    console.log(e.response);\n    return thunkApi.rejectWithValue(e.response);\n  }\n});\nexport const likePostAction = createAsyncThunk(`posts/likePost/`, // Declare the type your function argument here:\nasync (postId, thunkApi) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post('/posts/like', {\n      postId: postId\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (e) {\n    console.log(e.response);\n    return thunkApi.rejectWithValue(e.response);\n  }\n});\nexport const dislikePostAction = createAsyncThunk(`posts/dislikePost/`, // Declare the type your function argument here:\nasync (postId, thunkApi) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios({\n      method: 'delete',\n      url: '/posts/dislike',\n      data: {\n        postId: postId\n      },\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (e) {\n    console.log(e.response);\n    return thunkApi.rejectWithValue(e.response);\n  }\n});\nexport const addToCollectionAction = createAsyncThunk(`posts/addtocollection/`, // Declare the type your function argument here:\nasync (postId, thunkApi) => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios({\n      method: 'post',\n      url: '/posts/addToCollection',\n      data: {\n        postId: postId\n      },\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    });\n    console.log(response);\n    return response.data;\n  } catch (e) {\n    console.log(e.response);\n    return thunkApi.rejectWithValue(e.response);\n  }\n});","map":{"version":3,"sources":["C:/Users/Digicrym/Documents/inspocreate/src/reducers/posts/thunk.js"],"names":["createAsyncThunk","axios","getPostList","data","thunkApi","token","localStorage","getItem","response","post","headers","Authorization","console","log","e","rejectWithValue","likePostAction","postId","dislikePostAction","method","url","addToCollectionAction"],"mappings":"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","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../axios';\n\nexport const getPostList = createAsyncThunk(\n\t`posts/getPostList/`,\n\t// Declare the type your function argument here:\n\tasync (data, thunkApi) => {\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('token');\n\t\t\tconst response = await axios.post('/posts/activities', '', {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + token,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconsole.log(response);\n\t\t\treturn response.data;\n\t\t} catch (e) {\n\t\t\tconsole.log(e.response);\n\t\t\treturn thunkApi.rejectWithValue(e.response);\n\t\t}\n\t}\n);\n\nexport const likePostAction = createAsyncThunk(\n\t`posts/likePost/`,\n\t// Declare the type your function argument here:\n\tasync (postId, thunkApi) => {\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('token');\n\t\t\tconst response = await axios.post(\n\t\t\t\t'/posts/like',\n\t\t\t\t{\n\t\t\t\t\tpostId: postId,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: 'Bearer ' + token,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\t\t\tconsole.log(response);\n\t\t\treturn response.data;\n\t\t} catch (e) {\n\t\t\tconsole.log(e.response);\n\t\t\treturn thunkApi.rejectWithValue(e.response);\n\t\t}\n\t}\n);\n\nexport const dislikePostAction = createAsyncThunk(\n\t`posts/dislikePost/`,\n\t// Declare the type your function argument here:\n\tasync (postId, thunkApi) => {\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('token');\n\n\t\t\tconst response = await axios({\n\t\t\t\tmethod: 'delete',\n\t\t\t\turl: '/posts/dislike',\n\t\t\t\tdata: {\n\t\t\t\t\tpostId: postId,\n\t\t\t\t},\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + token,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconsole.log(response);\n\t\t\treturn response.data;\n\t\t} catch (e) {\n\t\t\tconsole.log(e.response);\n\t\t\treturn thunkApi.rejectWithValue(e.response);\n\t\t}\n\t}\n);\n\nexport const addToCollectionAction = createAsyncThunk(\n\t`posts/addtocollection/`,\n\t// Declare the type your function argument here:\n\tasync (postId, thunkApi) => {\n\t\ttry {\n\t\t\tconst token = localStorage.getItem('token');\n\n\t\t\tconst response = await axios({\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: '/posts/addToCollection',\n\t\t\t\tdata: {\n\t\t\t\t\tpostId: postId,\n\t\t\t\t},\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + token,\n\t\t\t\t},\n\t\t\t});\n\t\t\tconsole.log(response);\n\t\t\treturn response.data;\n\t\t} catch (e) {\n\t\t\tconsole.log(e.response);\n\t\t\treturn thunkApi.rejectWithValue(e.response);\n\t\t}\n\t}\n);\n"]},"metadata":{},"sourceType":"module"}