{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { createCommentThunk, getCommentThunk, replyCommentAction, likeCommentAction, dislikeCommentAction, deleteCommentAction } from './thunk';\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null\n};\nexport const createCommentSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createCommentThunk.pending, (state, {\n      payload\n    }) => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(createCommentThunk.fulfilled, (state, {\n      payload\n    }) => {\n      // state.data = payload;\n      state.loading = false;\n      state.error = null;\n    });\n    builder.addCase(createCommentThunk.rejected, (state, action) => {\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        state.error = action.error;\n      }\n\n      state.loading = false;\n    });\n    builder.addCase(getCommentThunk.pending, (state, {\n      payload\n    }) => {\n      state.data = [];\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(getCommentThunk.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = payload;\n      state.loading = false;\n      state.error = null;\n    });\n    builder.addCase(getCommentThunk.rejected, (state, action) => {\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        state.error = action.error;\n      }\n\n      state.loading = false;\n    });\n    builder.addCase(replyCommentAction.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = state.data.map(post => {\n        if (post.id === payload.id) {\n          return payload;\n        } else {\n          return post;\n        }\n      });\n      state.loading = false;\n      state.error = null;\n    });\n    builder.addCase(likeCommentAction.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = state.data.map(comment => {\n        if (comment.id === payload.id) {\n          return payload;\n        } else {\n          return comment;\n        }\n      });\n      state.loading = false;\n      state.error = null;\n    });\n    builder.addCase(dislikeCommentAction.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = state.data.map(post => {\n        if (post.id === payload.id) {\n          return payload;\n        } else {\n          return post;\n        }\n      });\n      state.loading = false;\n      state.error = null;\n    });\n    builder.addCase(deleteCommentAction.fulfilled, (state, {\n      payload\n    }) => {\n      state.data = state.data.map(post => {\n        if (post.id === payload.id) {\n          return payload;\n        } else {\n          return post;\n        }\n      });\n      state.loading = false;\n      state.error = null;\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/Digicrym/Documents/inspocreate/src/reducers/comments/slice.js"],"names":["createSlice","createCommentThunk","getCommentThunk","replyCommentAction","likeCommentAction","dislikeCommentAction","deleteCommentAction","initialState","data","loading","error","createCommentSlice","name","reducers","extraReducers","builder","addCase","pending","state","payload","fulfilled","rejected","action","map","post","id","comment"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport {\n\tcreateCommentThunk,\n\tgetCommentThunk,\n\treplyCommentAction,\n\tlikeCommentAction,\n\tdislikeCommentAction,\n\tdeleteCommentAction,\n} from './thunk';\nconst initialState = {\n\tdata: [],\n\tloading: false,\n\terror: null,\n};\n\nexport const createCommentSlice = createSlice({\n\tname: 'comments',\n\tinitialState,\n\treducers: {},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(createCommentThunk.pending, (state, { payload }) => {\n\t\t\tstate.loading = true;\n\t\t\tstate.error = null;\n\t\t});\n\t\tbuilder.addCase(createCommentThunk.fulfilled, (state, { payload }) => {\n\t\t\t// state.data = payload;\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\t\tbuilder.addCase(createCommentThunk.rejected, (state, action) => {\n\t\t\tif (action.payload) {\n\t\t\t\tstate.error = action.payload;\n\t\t\t} else {\n\t\t\t\tstate.error = action.error;\n\t\t\t}\n\t\t\tstate.loading = false;\n\t\t});\n\n\t\tbuilder.addCase(getCommentThunk.pending, (state, { payload }) => {\n\t\t\tstate.data = [];\n\t\t\tstate.loading = true;\n\t\t\tstate.error = null;\n\t\t});\n\t\tbuilder.addCase(getCommentThunk.fulfilled, (state, { payload }) => {\n\t\t\tstate.data = payload;\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\t\tbuilder.addCase(getCommentThunk.rejected, (state, action) => {\n\t\t\tif (action.payload) {\n\t\t\t\tstate.error = action.payload;\n\t\t\t} else {\n\t\t\t\tstate.error = action.error;\n\t\t\t}\n\t\t\tstate.loading = false;\n\t\t});\n\n\t\tbuilder.addCase(replyCommentAction.fulfilled, (state, { payload }) => {\n\t\t\tstate.data = state.data.map((post) => {\n\t\t\t\tif (post.id === payload.id) {\n\t\t\t\t\treturn payload;\n\t\t\t\t} else {\n\t\t\t\t\treturn post;\n\t\t\t\t}\n\t\t\t});\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\n\t\tbuilder.addCase(likeCommentAction.fulfilled, (state, { payload }) => {\n\t\t\tstate.data = state.data.map((comment) => {\n\t\t\t\tif (comment.id === payload.id) {\n\t\t\t\t\treturn payload;\n\t\t\t\t} else {\n\t\t\t\t\treturn comment;\n\t\t\t\t}\n\t\t\t});\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\n\t\tbuilder.addCase(dislikeCommentAction.fulfilled, (state, { payload }) => {\n\t\t\tstate.data = state.data.map((post) => {\n\t\t\t\tif (post.id === payload.id) {\n\t\t\t\t\treturn payload;\n\t\t\t\t} else {\n\t\t\t\t\treturn post;\n\t\t\t\t}\n\t\t\t});\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\n\t\tbuilder.addCase(deleteCommentAction.fulfilled, (state, { payload }) => {\n\t\t\tstate.data = state.data.map((post) => {\n\t\t\t\tif (post.id === payload.id) {\n\t\t\t\t\treturn payload;\n\t\t\t\t} else {\n\t\t\t\t\treturn post;\n\t\t\t\t}\n\t\t\t});\n\t\t\tstate.loading = false;\n\t\t\tstate.error = null;\n\t\t});\n\t},\n});\n"]},"metadata":{},"sourceType":"module"}