{"ast":null,"code":"import _defineProperty from \"C:/Users/Digicrym/Documents/inspocreate/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Digicrym\\\\Documents\\\\inspocreate\\\\src\\\\components\\\\navbarAfterLogin\\\\components\\\\addPostModal\\\\components\\\\localPost.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport plusIcontwo from '../../../../../assets/Imgs/Shape Copy 212.svg';\nimport { AuthContext } from '../../../../../context/auth';\nimport axios from '../../../../../axios';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCategories } from '../../../../../reducers';\n\nconst TagComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tagComponent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagComponent__text\",\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagComponent__close\",\n      onClick: () => {\n        props.cullTagFromTags(props.text);\n      },\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TagComponent;\n\nconst LocalPost = () => {\n  _s();\n\n  const context = useContext(AuthContext); // API FOR FORM DATA FOR CREATE POST\n\n  const {\n    0: postState,\n    1: setPostState\n  } = useState({\n    title: '',\n    description: '',\n    categories: ['anas'],\n    url: undefined,\n    image: null,\n    tags: [],\n    public: true,\n    collection: true,\n    postType: 'Image'\n  });\n  const history = useHistory();\n\n  const onChangeFile = event => {\n    // console.log(event);\n    // console.log(context)\n    const formData = new FormData();\n    formData.append('file', event.target.files[0]);\n    axios.post('/media', formData, {\n      headers: {\n        Authorization: 'Bearer ' + context.state.token\n      }\n    }).then(response => {\n      setPostState(_objectSpread(_objectSpread({}, postState), {}, {\n        image: response.data.path\n      }));\n      console.log(response);\n    }).catch(error => {\n      console.error(error.response);\n    });\n  }; // API FOR SELECT CATEGORIES FROM REDUCER\n\n\n  const categoriesState = useSelector(state => state.categories);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n  }, []); // API FOR CREATE POST\n\n  const pushPost = e => {\n    e.preventDefault();\n    axios.post('/posts/create', _objectSpread({}, postState), {\n      headers: {\n        Authorization: 'Bearer ' + context.state.token\n      }\n    }).then(response => {\n      history.push('/uploadedPost');\n      console.log(response);\n    }).catch(error => {\n      console.error(error.response);\n    });\n  }; // TAGS IN INPUT\n\n\n  const [tags, setTags] = React.useState(['JavaScript', 'TypeScript']);\n  const inputRef = React.useRef();\n  const [inputValue, setInputValue] = React.useState('');\n\n  const inputValueChangeHandler = inputChange => {\n    setInputValue(inputChange);\n\n    if (inputChange[inputChange.length - 1] === ',') {\n      setTags([...tags, inputChange.slice(0, inputChange.length - 1)]);\n      setInputValue('');\n    }\n  };\n\n  const cullTagFromTags = tag => {\n    setTags([...tags.filter(element => element !== tag)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-post-form\",\n      onSubmit: pushPost,\n      children: [!postState.image && /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"add-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: plusIcontwo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          hidden: true,\n          onChange: onChangeFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 6\n      }, this), !!postState.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: postState.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Some Text Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"category\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          className: \"select-type\",\n          children: categoriesState.data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"massage\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ytype: \"text\",\n          rows: \"6\",\n          placeholder: \"Some Text Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-post\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"tags\",\n          children: \"Add Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tagArea\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tagArea__displayArea\",\n            children: tags.map(tag => /*#__PURE__*/_jsxDEV(TagComponent, {\n              text: tag,\n              cullTagFromTags: cullTagFromTags\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            ref: inputRef,\n            value: inputValue,\n            onChange: event => inputValueChangeHandler(event.target.value),\n            placeholder: \"separated by commas\",\n            className: \"tagArea__input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"public\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"slider round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"I Would Like to Post Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LocalPost, \"Bx1zx/LC8iViBeuof6BM+h2obTQ=\", false, function () {\n  return [useHistory, useSelector, useDispatch];\n});\n\n_c2 = LocalPost;\nexport default LocalPost; // postType: postType\n// useEffect(() => {\n//     if(context.state){\n//       setShow(false)\n//     }\n//   }, [context])\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TagComponent\");\n$RefreshReg$(_c2, \"LocalPost\");","map":{"version":3,"sources":["C:/Users/Digicrym/Documents/inspocreate/src/components/navbarAfterLogin/components/addPostModal/components/localPost.js"],"names":["React","useState","useEffect","useContext","plusIcontwo","AuthContext","axios","useHistory","useSelector","useDispatch","getCategories","TagComponent","props","text","cullTagFromTags","LocalPost","context","postState","setPostState","title","description","categories","url","undefined","image","tags","public","collection","postType","history","onChangeFile","event","formData","FormData","append","target","files","post","headers","Authorization","state","token","then","response","data","path","console","log","catch","error","categoriesState","dispatch","pushPost","e","preventDefault","push","setTags","inputRef","useRef","inputValue","setInputValue","inputValueChangeHandler","inputChange","length","slice","tag","filter","element","map","item","id","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport plusIcontwo from '../../../../../assets/Imgs/Shape Copy 212.svg';\nimport { AuthContext } from '../../../../../context/auth';\nimport axios from '../../../../../axios';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCategories } from '../../../../../reducers';\n\nconst TagComponent = (props) => {\n\treturn (\n\t\t<div className='tagComponent'>\n\t\t\t<div className='tagComponent__text'>{props.text}</div>\n\t\t\t<div\n\t\t\t\tclassName='tagComponent__close'\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.cullTagFromTags(props.text);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tX\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst LocalPost = () => {\n\tconst context = useContext(AuthContext);\n\n\t// API FOR FORM DATA FOR CREATE POST\n\tconst [postState, setPostState] = useState({\n\t\ttitle: '',\n\t\tdescription: '',\n\t\tcategories: ['anas'],\n\t\turl: undefined,\n\t\timage: null,\n\t\ttags: [],\n\t\tpublic: true,\n\t\tcollection: true,\n\t\tpostType: 'Image',\n\t});\n\tconst history = useHistory();\n\tconst onChangeFile = (event) => {\n\t\t// console.log(event);\n\t\t// console.log(context)\n\t\tconst formData = new FormData();\n\t\tformData.append('file', event.target.files[0]);\n\t\taxios\n\t\t\t.post('/media', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + context.state.token,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tsetPostState({\n\t\t\t\t\t...postState,\n\t\t\t\t\timage: response.data.path,\n\t\t\t\t});\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.response);\n\t\t\t});\n\t};\n\n\t// API FOR SELECT CATEGORIES FROM REDUCER\n\tconst categoriesState = useSelector((state) => state.categories);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(getCategories());\n\t}, []);\n\n\t// API FOR CREATE POST\n\tconst pushPost = (e) => {\n\t\te.preventDefault();\n\t\taxios\n\t\t\t.post(\n\t\t\t\t'/posts/create',\n\t\t\t\t{ ...postState },\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: 'Bearer ' + context.state.token,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\thistory.push('/uploadedPost');\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.response);\n\t\t\t});\n\t};\n\n\t// TAGS IN INPUT\n\tconst [tags, setTags] = React.useState(['JavaScript', 'TypeScript']);\n\tconst inputRef = React.useRef();\n\tconst [inputValue, setInputValue] = React.useState('');\n\n\tconst inputValueChangeHandler = (inputChange) => {\n\t\tsetInputValue(inputChange);\n\t\tif (inputChange[inputChange.length - 1] === ',') {\n\t\t\tsetTags([...tags, inputChange.slice(0, inputChange.length - 1)]);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\tconst cullTagFromTags = (tag) => {\n\t\tsetTags([...tags.filter((element) => element !== tag)]);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<form className='add-post-form' onSubmit={pushPost}>\n\t\t\t\t{!postState.image && (\n\t\t\t\t\t<label className='add-img'>\n\t\t\t\t\t\t<img src={plusIcontwo} />\n\t\t\t\t\t\t<p>Add New</p>\n\t\t\t\t\t\t<input type='file' hidden onChange={onChangeFile} />\n\t\t\t\t\t</label>\n\t\t\t\t)}\n\t\t\t\t{!!postState.image && <img src={postState.image} />}\n\t\t\t\t<div className='input-post'>\n\t\t\t\t\t<label htmlFor='title'>Title</label>\n\t\t\t\t\t<input type='text' placeholder='Some Text Here' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-post'>\n\t\t\t\t\t<label htmlFor='category'>Categories</label>\n\t\t\t\t\t<select name='category' className='select-type'>\n\t\t\t\t\t\t{categoriesState.data.map((item) => (\n\t\t\t\t\t\t\t<option value={item.id}>{item.title}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className='input-post'>\n\t\t\t\t\t<label htmlFor='massage'>Description</label>\n\t\t\t\t\t<textarea ytype='text' rows='6' placeholder='Some Text Here' />\n\t\t\t\t</div>\n\t\t\t\t<div className='input-post'>\n\t\t\t\t\t<label htmlFor='tags'>Add Tags</label>\n\t\t\t\t\t<div className='tagArea'>\n\t\t\t\t\t\t<div className='tagArea__displayArea'>\n\t\t\t\t\t\t\t{tags.map((tag) => (\n\t\t\t\t\t\t\t\t<TagComponent text={tag} cullTagFromTags={cullTagFromTags} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\t\tonChange={(event) => inputValueChangeHandler(event.target.value)}\n\t\t\t\t\t\t\tplaceholder='separated by commas'\n\t\t\t\t\t\t\tclassName='tagArea__input'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='public'>\n\t\t\t\t\t\t<div className='toggle'>\n\t\t\t\t\t\t\t<label className='switch'>\n\t\t\t\t\t\t\t\t<input type='checkbox' checked />\n\t\t\t\t\t\t\t\t<span className='slider round'></span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>Public</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='submit-btn'>\n\t\t\t\t\t<button type='submit'>I Would Like to Post Now</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default LocalPost;\n\n// postType: postType\n\n// useEffect(() => {\n//     if(context.state){\n//       setShow(false)\n//     }\n//   }, [context])\n"]},"metadata":{},"sourceType":"module"}